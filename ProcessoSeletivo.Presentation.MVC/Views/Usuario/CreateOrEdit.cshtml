@model UsuarioViewModel

@{
    ViewBag.Title = Model?.Id > 0 ? "Editar" : "Cadastrar";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Usuario</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ativo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Ativo)
                    @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Perfis, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10 form-inline">
                @Html.ListBox("perfisAdicionados", new SelectList(Model.Perfis?.Select(m => m.Perfil).ToList() ?? new List<PerfilViewModel>(), "Id", "Nome"), new { @class = "col-md-4 form-control", size = 5, style = "width:150px" })

                <button type="button" class="btn btn-warning form-control" onclick="delPerfil()">Retirar</button>
                <button type="button" class="btn btn-info form-control" onclick="addPerfil()">Adicionar</button>

                @Html.ListBox("outrosPerfis", new SelectList(ViewBag.OutrosPerfis, "Id", "Nome"), new { @class = "form-control", size = 5, style = "width:150px" })


            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" onmouseover="gambiSono()" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-link" })
</div>

@section Scripts {
    <script>

        function addPerfil() {
            var listPerfis = $('#perfisAdicionados');
            var outrosPerfis = $('#outrosPerfis');
            var sel = outrosPerfis.find(':selected');
            sel.remove();
            listPerfis.append(sel);
        }

        function delPerfil() {
            var listPerfis = $('#perfisAdicionados');
            var outrosPerfis = $('#outrosPerfis');
            var sel = listPerfis.find(':selected');
            sel.remove();
            outrosPerfis.append(sel);

        }

        function gambiSono() {
            console.log('teste');
            $('#perfisAdicionados').find('option').prop('selected',true);
        }

    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
